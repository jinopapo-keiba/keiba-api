<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.RaceResultRepository">

    <resultMap id="RaceResultMap" type="com.example.demo.entity.RaceResult">
        <id column="id"/>
        <id column="frameNumber"/>
        <result property="fullTime" column="fullTime"/>
        <result property="ranking" column="ranking"/>
        <result property="cornerRanking" column="cornerRanking"/>
        <result property="popular" column="popular"/>
        <result property="lastRapTime" column="lastRapTime"/>
        <result property="meanFullTime" column="meanFullTime"/>
        <result property="meanLastRapTime" column="meanLastRapTime"/>
        <result property="stdDeviFullTime" column="stdDeviFullTime"/>
        <result property="stdDeviLastRapTime" column="stdDeviLastRapTime"/>
        <result property="meanTargetRaceFullTime" column="meanTargetRaceFullTime"/>
        <result property="meanTargetRaceLastRapTime" column="meanTargetRaceLastRapTime"/>
        <result property="stdDeviTargetRaceFullTime" column="stdDeviTargetRaceFullTime"/>
        <result property="stdDeviTargetRaceLastRapTime" column="stdDeviTargetRaceLastRapTime"/>
    </resultMap>

    <insert id="saveRaceResult">
        INSERT INTO raceResult (
            raceId,
            frameNumber,
            fullTime,
            cornerRanking,
            ranking,
            lastRapTime,
            popular
        )
        VALUE(
            #{race.id},
            #{raceHorse.frameNumber},
            #{raceResult.fullTime},
            #{raceResult.cornerRanking},
            #{raceResult.ranking},
            #{raceResult.lastRapTime},
            #{raceResult.popular}
        )
        ON DUPLICATE KEY
        UPDATE
            fullTime = #{raceResult.fullTime},
            cornerRanking = #{raceResult.cornerRanking},
            ranking = #{raceResult.ranking},
            lastRapTime = #{raceResult.lastRapTime},
            popular = #{raceResult.popular}
    </insert>

    <select id="fetchStadiumSummaryTimes" resultType="com.example.demo.entity.StadiumTime">
        SELECT DISTINCT
            <if test="time == 'fullTime'">
                avg(fullTime) as time,
            </if>
            <if test="time == 'lastRapTime'">
                avg(lastRapTime) as time,
            </if>
            count(fullTime) as count,
            race.stadium
        FROM
            race
        JOIN
            raceResult
        ON
            race.id = raceResult.raceId
        JOIN
            raceHorse
        ON
            raceHorse.raceId = raceResult.raceId
        AND
            raceHorse.frameNumber = raceResult.frameNumber
        WHERE
            race.raceLength = #{raceLength}
        AND
            raceResult.ranking = 1
        <if test="grade != null">
        AND
            race.grade = #{grade.value}
        </if>
        GROUP BY
            race.stadium
    </select>

    <select id="fetchRaceResultSummary" resultType="com.example.demo.entity.RaceResultSummary">
        SELECT
            avg(fullTIme) as meanFullTime,
            avg(lastRapTime) as meanLastRapTime,
            stddev_pop(fullTime) as stdevpFullTime,
            stddev_pop(lastRapTime) as stdevpLastRapTime
        FROM
            race
        JOIN
            raceResult
        ON
            race.id = raceResult.raceId
        JOIN
            raceHorse
        ON
            raceHorse.raceId = raceResult.raceId
        AND
            raceHorse.frameNumber = raceResult.frameNumber
        WHERE
            raceResult.ranking = 1
        <if test="raceLength != null">
        AND
            race.raceLength = #{raceLength}
        </if>
        <if test="stadium != null">
        AND
            race.stadium = #{stadium}
        </if>
        <if test="stadium == null">
            AND
            race.stadium = (
                SELECT
                    race.stadium
                FROM
                    race
                WHERE
                    race.id = #{raceId}
            )
        </if>
        <if test="raceCondition != null">
        AND
            race.raceCondition = #{raceCondition.value}
        </if>
    </select>

</mapper>
