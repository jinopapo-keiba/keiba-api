<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.RaceRepository">
    <resultMap id="raceResultMap" type="com.example.demo.entity.Race">
        <id property="id" column="id"/>
        <result property="raceName" column="raceName"/>
        <result property="stadium" column="stadium"/>
        <result property="round" column="round"/>
        <result property="raceType" column="raceType"/>
        <result property="raceLength" column="raceLength"/>
        <result property="clockwise" column="clockwise"/>
        <result property="raceCondition" column="raceCondition"/>
        <result property="raceWeather" column="raceWeather"/>
        <result property="grade" column="grade"/>
        <result property="raceDate" column="raceDate"/>
        <collection property="raceHorses" ofType="com.example.demo.entity.RaceHorse">
            <id column="horseId"/>
            <id column="jockeyId"/>
            <id column="id"/>
            <result property="weight" column="weight"/>
            <result property="old" column="old"/>
            <result property="frameNumber" column="frameNumber"/>
            <association javaType="com.example.demo.entity.Horse" property="horse">
                <id property="id" column="horseId"/>
                <result property="name" column="horseName"/>
                <result property="gender" column="horseGender"/>
            </association>
            <association javaType="com.example.demo.entity.Jockey" property="jockey">
                <id column="horseId"/>
                <id column="jockeyId"/>
                <result property="name" column="jockeyName"/>
            </association>
            <association resultMap="com.example.demo.repository.RaceResultRepository.RaceResultMap" property="raceResult"/>
        </collection>
    </resultMap>

    <insert id="saveRace" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO race (
            stadium,
            round,
            raceName,
            raceType,
            raceLength,
            clockwise,
            raceCondition,
            raceWeather,
            grade,
            raceDate
        ) VALUES (
            #{race.stadium},
            #{race.round},
            #{race.raceName},
            #{race.raceType.value},
            #{race.raceLength},
            #{race.clockwise.value},
            #{race.raceCondition.value},
            #{race.raceWeather.value},
            #{race.grade.value},
            #{race.raceDate}
        )
    </insert>

    <update id="updateRace">
        UPDATE
            race
        SET
            stadium = #{race.stadium},
            round = #{race.round},
            raceName = #{race.raceName},
            raceType = #{race.raceType.value},
            raceLength = #{race.raceLength},
            clockwise = #{race.clockwise.value},
            raceCondition = #{race.raceCondition.value},
            raceWeather = #{race.raceWeather.value},
            grade = #{race.grade.value},
            raceDate = #{race.raceDate}
        WHERE
            id = #{race.id}
    </update>

    <select id="fetchRace" resultMap="raceResultMap">
        SELECT
            raceName,raceType,raceLength,clockwise,raceCondition,raceWeather,grade,raceDate,race.id as id,round,stadium,
            weight,old,raceHorse.frameNumber as frameNumber,
            jockey.id as jockeyId,jockey.name as jockeyName,
            horse.id as horseId,horse.name as horseName, gender as horseGender
        <if test="queryParam.beforeRace == null">
            ,fullTime,ranking,cornerRanking,lastRapTime
        </if>
        FROM
            race
        JOIN
            raceHorse
        ON
            raceHorse.raceId = race.id
        JOIN
            horse
        ON
            horseId = horse.id
        JOIN
            jockey
        ON
            jockeyId = jockey.id
        <if test="queryParam.beforeRace == null">
            JOIN
                raceResult
            ON
                raceResult.raceId = race.id
            AND
                raceHorse.frameNumber = raceResult.frameNumber
        </if>
        <where>
            <if test="queryParam.stadium != null">
                stadium = #{queryParam.stadium}
            </if>
            <if test="queryParam.round != null">
                AND round = #{queryParam.round}
            </if>
            <if test="queryParam.raceDate != null">
                AND raceDate = #{queryParam.raceDate}
            </if>
            <if test="queryParam.beforeRace == true">
                AND raceDate >= CURDATE()
            </if>
        </where>
        ORDER BY
            raceHorse.frameNumber
    </select>

    <select id="fetchRanRaceLength" resultType="Integer">
        SELECT DISTINCT
            raceLength
        FROM
            race
        JOIN
            raceResult
        ON
            race.id = raceResult.raceId
        JOIN
            raceHorse
        ON
            raceHorse.raceId = raceResult.raceId
        AND
            raceHorse.frameNumber = raceResult.frameNumber
        JOIN
            horse
        ON
            raceHorse.horseId = horse.id
        WHERE
            race.raceDate &gt; now() - INTERVAL 24 MONTH
        AND
            horse.id
        IN (
            select horse.id from race join raceHorse on race.id = raceHorse.raceId join horse on raceHorse.horseId = horse.id WHERE race.id = #{raceId}
        )
    </select>
</mapper>
